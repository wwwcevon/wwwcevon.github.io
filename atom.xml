<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kevincai's Blog]]></title>
  <link href="http://wwwcevon.github.io/atom.xml" rel="self"/>
  <link href="http://wwwcevon.github.io/"/>
  <updated>2014-10-08T14:04:40+08:00</updated>
  <id>http://wwwcevon.github.io/</id>
  <author>
    <name><![CDATA[Kevincai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[fabric]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/08/07/fabric/"/>
    <updated>2014-08-07T16:50:35+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/08/07/fabric</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python challenge]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/05/15/python-challenge/"/>
    <updated>2014-05-15T15:50:03+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/05/15/python-challenge</id>
    <content type="html"><![CDATA[<p>发现了一个好玩的 <a href="http://www.pythonchallenge.com">网站</a></p>

<h3>Level 0</h3>

<p>关于幂运算的问题，计算2的38次方</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>result = 2 ** 28</span></code></pre></td></tr></table></div></figure>


<h3>Level 1</h3>

<p>关于 String 的一些操作</p>

<p>要求把一个字符串中的每一个字母都替换成 ASCII+2</p>

<p>需要用到 <code>string.maketrans(from, to)</code> `translate</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cp文件夹中的.git .virtualenv的坑]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/05/14/cpwen-jian-jia-zhong-de-dot-git-virtualenvde-keng/"/>
    <updated>2014-05-14T18:23:57+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/05/14/cpwen-jian-jia-zhong-de-dot-git-virtualenvde-keng</id>
    <content type="html"><![CDATA[<p>cp 不会 copy 隐藏文件(以.开头的)</p>

<p>如 <code>.git</code> <code>.virtualenv</code></p>

<p>所以如果有用 virtualenv 包装环境，不要使用 cp 或者 mv 直接复制或者移动</p>

<p>如果非要使用，可以加上<code>-a</code></p>

<p><strong>注意</strong>: 直接移动 virtualenv 后会无法使用，因为虚拟环境是写死绝对路径的</p>

<p>可以在 .virtualenv/bin/activate 中找到并修改</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pymongo 的一些坑]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/05/14/pymongo-de-%5B%3F%5D-xie-keng/"/>
    <updated>2014-05-14T18:03:44+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/05/14/pymongo-de-[?]-xie-keng</id>
    <content type="html"><![CDATA[<h2>关于 bson.objectid.ObjectID 的一些问题</h2>

<p>常见 Mongodb 的 _id 的类型</p>

<p>ObjectID to String:
<code>str()</code></p>

<p>String to ObjectID:
<code>ObjectID()</code></p>

<p>ObjectID每个部分都是有意义的 <a href="http://devopslog.wordpress.com/2012/04/22/disassemblingreassembling-mongodb-objectids/">详见</a></p>

<h2></h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Query embedded documents]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/05/14/query-embedded-documents/"/>
    <updated>2014-05-14T11:05:54+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/05/14/query-embedded-documents</id>
    <content type="html"><![CDATA[<h2>MongoDB query</h2>

<h3>embedded documents</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.collection.find({
</span><span class='line'>    producer: {
</span><span class='line'>        company: 'ABC123'
</span><span class='line'>      }
</span><span class='line'>  })</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.collection.find({'producer.company': 'ABC123'})</span></code></pre></td></tr></table></div></figure>


<h3>match an array element</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.inventory.find({'tags.0':'fruit'})</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python import]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/05/12/python-import/"/>
    <updated>2014-05-12T12:20:27+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/05/12/python-import</id>
    <content type="html"><![CDATA[<h2>import 如何工作</h2>

<ul>
<li>找到模块文件</li>
<li>编译成位码</li>
<li>执行模块的代码来创建其所定义的对象</li>
</ul>


<p>这三个步骤只有在模块第一次导入时才会进行，后面重复导入会跳过</p>

<p>如果需要强制再次导入，需要调用reload</p>

<h3>搜索路径</h3>

<ul>
<li>程序的主目录</li>
<li>PYTHONPATH目录</li>
<li>标准链接库目录</li>
<li>任何 .pth 文件的内容</li>
</ul>


<p>import b 省略了文件后缀，Python 会选择第一个符合的</p>

<ul>
<li>源代码 b.py</li>
<li>字节码 b.pyc</li>
<li>目录 b</li>
<li>编译扩展模块 b.so b.dll b.pyd</li>
<li>用c编写的编译好的内置模块</li>
<li>zip 文件，导入时自动解压缩</li>
<li>内存内映射</li>
<li>java 类</li>
<li>.NET 组件</li>
</ul>


<h3>distutils 第三方工具</h3>

<p>更多有关 <a href="http://peak.telecommunity.com/DevCenter/PythonEggs">Python egg</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mongoDB学习记录]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/04/21/mongodbxue-xi-ji-lu/"/>
    <updated>2014-04-21T16:33:50+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/04/21/mongodbxue-xi-ji-lu</id>
    <content type="html"><![CDATA[<h1>MongoDB</h1>

<h2>Data Models</h2>

<h3>Reference</h3>

<p>使用引用去关系collection，直接存<em>id或者collectionname_id:&lt;</em>id></p>

<h3>Embedded Data</h3>

<p>使用内嵌去关系collection，每个Bson文件不能大于16mb</p>

<p>不是完全不能存16mb以上的collection，而是当collection的大小超过16mb时mongodb会自动将它从内存中转移到硬盘中，降低了速度，也使数据分离，所以当collection预计要超过16mb时，建议使用reference</p>

<h3>Atomicity</h3>

<p>在Mongodb中对document的操作都是atomicity，对某个document的操作同时都是单一的，一个写操作也不能同时对多个document进行。</p>

<h3>Sharding</h3>

<p>使用sharding来使得mongodb可以支持分布式和大数据</p>

<p>分解collections对于大数据很重要</p>

<h3>Indexes</h3>

<ul>
<li>Mongodb默认对_id创建特殊的index</li>
<li>index对读操作会有用，但是对写操作有副作用，每次写操作都将重新生成index</li>
<li>每个index占8kb</li>
<li>当启动时，index就会占用内存</li>
</ul>


<h3>Namespace</h3>

<p>namespace 文件 .ns 存所有的collection和index的名字</p>

<p>每个namespace不能超过123 bytes</p>

<p>16mb的namespace 文件存约24000个namespaces</p>

<p>namespace文件最大为2047 mb</p>

<p>可以通过 nssize 选项控制</p>

<h3>GridFS</h3>

<p>GridFS存在两个文件中 fs.files fs.chunks</p>

<p>GridFS可以创建index</p>

<p>GridFS性能通常不如HDFS</p>

<h3>mongoexport mongoimport</h3>

<p>用于导入和导出数据，可以使用csv文件格式，可以跨数据库平台</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB的嵌套和引用]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/04/21/mongodbde-qian-tao-he-yin-yong/"/>
    <updated>2014-04-21T11:34:04+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/04/21/mongodbde-qian-tao-he-yin-yong</id>
    <content type="html"><![CDATA[<h1>MongoDB</h1>

<h2>Skills</h2>

<p>MongoDB中表示关系的方法有两种：</p>

<ul>
<li>嵌套</li>
<li>引用</li>
</ul>


<h3>嵌套</h3>

<p>collection中嵌套collection，逻辑上数据分离，但存储上是一个整体</p>

<p>{A:[{A.a:1},{A.b:2},{A.c:3}],B:4}</p>

<h3>引用链接</h3>

<p>通过DBRef对象储存目标文档的信息，如同sql中的外键</p>

<p>{A:[DBRef(Collection_x,x.a[&lsquo;<em>id&rsquo;]),DBRef(Collection_x,x.b[&lsquo;</em>id&rsquo;]),DBRef(Collection_x,x.c[&lsquo;_id&rsquo;])],B:name}</p>

<h3>区别</h3>

<ul>
<li>用法上不一样

<ul>
<li>嵌套直接使用</li>
<li>引用链接需要解引用（dereference）</li>
</ul>
</li>
<li>储存不一样

<ul>
<li>嵌套是完整的文档</li>
<li>引用是一个外键</li>
</ul>
</li>
<li>性能不一样

<ul>
<li>嵌套一次查询</li>
<li>引用根据解引用的次数+1（引用文档本身）</li>
</ul>
</li>
</ul>


<h3>自动解引用</h3>

<p>用pymongo.son_maniputaor中的AutoReference和NamespaceInjector绑定database就可以像嵌套一样去使用引用，不需要每次都手动解引用</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/04/18/mongodb/"/>
    <updated>2014-04-18T15:55:37+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/04/18/mongodb</id>
    <content type="html"><![CDATA[<h1>MongoDB</h1>

<h2>Tips</h2>

<p>MongoDB&mdash;&mdash;SQL</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>document     row
</span><span class='line'>collection   table
</span><span class='line'>database     database</span></code></pre></td></tr></table></div></figure>


<p>Daemon</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mongod --dbpath=&lt;data/db&gt; --logpath=&lt;data/log/r3.log&gt; --fork</span></code></pre></td></tr></table></div></figure>


<p>config</p>

<p><code>port</code>
Web port = port+1000</p>

<p><code>logappendw</code>
错误日志采用追加模式，默认是复写模式</p>

<p><code>journal</code>
开启日志功能</p>

<p><code>directoryperdb</code>
每个db存放在单独的目录中，建议设置</p>

<p><code>maxConns</code>
最大连接数</p>

<h2>Attention</h2>

<p>不要用kill -9 杀mongoDB的进程，会损坏数据</p>

<p>可以使用
<code>Control-C</code>
<code>shutdownServer()</code>
<code>kill -2</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PredictionIO issue solution]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/04/03/predictionio-issue-solution/"/>
    <updated>2014-04-03T11:13:25+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/04/03/predictionio-issue-solution</id>
    <content type="html"><![CDATA[<h1>PredictionIO</h1>

<h2>Trouble</h2>

<h3>Trouble description</h3>

<p>run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PredictionIO/bin/start-all.sh</span></code></pre></td></tr></table></div></figure>


<p>error:Trying to start API server&hellip; (8000 unreachable)</p>

<h3>Solution</h3>

<p>delete api.pid</p>

<h3>Trouble description</h3>

<p>can&rsquo;t run engine</p>

<h3>Solution</h3>

<p>delete hdfs vagrant/predictionio/apps/*</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[create new user in ubuntu]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/27/create-new-user-in-ubuntu/"/>
    <updated>2014-03-27T14:57:42+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/27/create-new-user-in-ubuntu</id>
    <content type="html"><![CDATA[<h1>Linux</h1>

<h2>Tips</h2>

<h3>Purpose</h3>

<p>Create new user on ubuntu</p>

<h3>How</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo useradd -d /home/username -m username
</span><span class='line'>$ sudo passwd username
</span><span class='line'>$ sudo adduser username group</span></code></pre></td></tr></table></div></figure>


<h3>Abnormal</h3>

<p>Bash not running for new admin users on login</p>

<h3>Solution</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ useradd -D
</span><span class='line'>$ sudo chsh -s /bin/bash username</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running two vagrant error]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/26/runing-two-vagrant-error/"/>
    <updated>2014-03-26T10:40:26+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/26/runing-two-vagrant-error</id>
    <content type="html"><![CDATA[<h1>Vagrant</h1>

<h2>Abnormal</h2>

<h3>Abnormal description</h3>

<p>Run two same name vagrant at same time with different ids.</p>

<p>ansible won&rsquo;t work correctly</p>

<p>can&rsquo;t open the correct webservice on the host (same ip,same port)</p>

<h3>Solution</h3>

<p>close the os in virtualbox which isn&rsquo;t controlled by vagrant</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search in blog]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/25/search-in-blog/"/>
    <updated>2014-03-25T16:10:46+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/25/search-in-blog</id>
    <content type="html"><![CDATA[<h1>Blog</h1>

<h2>Search</h2>

<h3>How to make it possible to search in the blog</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>site:wwwcevon.github.io</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Add a site</li>
<li>Download HTML verification file</li>
<li>copy into /source</li>
<li>regenerate and deploy</li>
<li><p>click verify</p></li>
<li><p>choose <code>Google Webmaster Tools</code> <code>Crawl:</code> <code>Fetch as Google</code></p></li>
<li>Click FETCH</li>
<li>URL submitted to index</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[design for oryx_cloud]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/25/design-for-oryx-cloud/"/>
    <updated>2014-03-25T14:16:02+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/25/design-for-oryx-cloud</id>
    <content type="html"><![CDATA[<h1>Oryx-cloud</h1>

<h2>design</h2>

<h3>功能</h3>

<ul>
<li>创建service(serving-layer computation-layer打包进行？多个s-l加一个c-l?)</li>
<li>创建instance</li>
<li><p>创建task?(queue list?)</p></li>
<li><p>配置(手动／自动／默认／界面化)</p></li>
<li>监控（host／service／instance？／）->图表（knowing）</li>
<li></li>
</ul>


<p>&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GithubPage build failed]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/25/githubpage-build-failed/"/>
    <updated>2014-03-25T10:16:06+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/25/githubpage-build-failed</id>
    <content type="html"><![CDATA[<h1>Blog</h1>

<h2>Error</h2>

<p>Blog framework:Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://octopress.org</span></code></pre></td></tr></table></div></figure>


<h3>Error description</h3>

<p>The page build failed with the following error:</p>

<p>A file was included in source/index.html that is a symlink or does not exist in your _includes directory.</p>

<h3>Solution</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd _deploy
</span><span class='line'>git config branch.master.remote origin
</span><span class='line'>git config branch.master.merge refs/heads/master
</span><span class='line'>git pull
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>Summary</h3>

<p>不应使用git commit去发表blog，或使用merge／rebase等使得source branch和master branch合并。</p>

<p>GithubPage只需要<em>deploy中的内容，所以将remote/master指向</em>deploy文件夹，再重新deploy</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Blog]]></title>
    <link href="http://wwwcevon.github.io/blog/2014/03/24/first-blog/"/>
    <updated>2014-03-24T17:37:02+08:00</updated>
    <id>http://wwwcevon.github.io/blog/2014/03/24/first-blog</id>
    <content type="html"><![CDATA[<h1>Blog</h1>

<h2>Installation</h2>

<p>Blog framework:Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://octopress.org</span></code></pre></td></tr></table></div></figure>


<h3>install octopress</h3>

<ul>
<li><p>install git</p></li>
<li><p>install rbenv</p></li>
<li><p>clone octopress from github</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure>


<ul>
<li>install dependencies</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Install the default Octopress theme</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>deploying to Github Pages</h3>

<ul>
<li><p>Create a new Github repository and name the repository with the format username.github.io, where username is your GitHub user name or organization name.</p></li>
<li><p>input</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages
</span><span class='line'>git@github.com:wwwcevon/wwwcevon.github.io.git</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Next run:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<ul>
<li>commit the source for your blog.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'your message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<h3>Configuring Octopress</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> _config.yml       # Main config (Jekyll's settings)
</span><span class='line'>Rakefile          # Configs for deployment
</span><span class='line'>config.rb         # Compass config
</span><span class='line'>config.ru         # Rack config</span></code></pre></td></tr></table></div></figure>


<p>&hellip;&hellip;<a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></p>

<h3>BLog with Octopress</h3>

<ul>
<li><p>rake new_post[&ldquo;title&rdquo;]</p></li>
<li><p>Generate and preview</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate   # Generates posts and pages into the public directory
</span><span class='line'>rake watch      # Watches source/ and sass/ for changes and regenerates
</span><span class='line'>rake preview    # open in chrome</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
